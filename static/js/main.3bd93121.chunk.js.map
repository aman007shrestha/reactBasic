{"version":3,"sources":["Table.js","Form.js","App.js","reportWebVitals.js","index.js"],"names":["TableHeader","TableBody","props","console","log","characterData","rows","map","row","index","name","job","onClick","removeCharacter","Table","className","Form","initialState","state","handleChange","event","target","value","setState","submitForm","handleSubmit","this","htmlFor","type","id","onChange","Component","App","characters","filter","character","i","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oOAUMA,EAAc,WAChB,OACI,gCACI,+BACI,sCACA,2CAMVC,EAAY,SAACC,GACfC,QAAQC,IAAIF,EAAMG,eAClB,IAAMC,EAAOJ,EAAMG,cAAcE,KAAI,SAACC,EAAKC,GAGvC,OAFAN,QAAQC,IAAI,OACZD,QAAQC,IAAII,GAER,+BACI,6BAAKA,EAAIE,OACT,6BAAKF,EAAIG,MACT,6BACI,wBAAQC,QAAS,WACbV,EAAMW,gBAAgBJ,IAD1B,wBAJCA,MAYjB,OACI,gCAAQH,KAmBDQ,EAdD,SAACZ,GAAW,IACfG,EAAkCH,EAAlCG,cAAeQ,EAAmBX,EAAnBW,gBACtB,OACI,qBAAKE,UAAU,YAAf,SACI,kCACI,cAAC,EAAD,IACA,cAAC,EAAD,CAAWV,cAAeA,EAC1BQ,gBAAiBA,U,eCPlBG,E,4MAzCXC,aAAe,CACXP,KAAM,GACNC,IAAK,I,EAETO,MAAQ,EAAKD,a,EACbE,aAAe,SAACC,GAAW,IAAD,EACAA,EAAMC,OAArBX,EADe,EACfA,KAAMY,EADS,EACTA,MACb,EAAKC,SAAL,eACKb,EAAOY,K,EAGhBE,WAAa,WACT,EAAKtB,MAAMuB,aAAa,EAAKP,OAC7B,EAAKK,SAAS,EAAKN,e,4CAEvB,WAAU,IAAD,EACiBS,KAAKR,MAAnBR,EADH,EACGA,KAAMC,EADT,EACSA,IACd,OACI,iCACI,uBAAOgB,QAAQ,OAAf,kBACA,uBACIC,KAAK,OACLlB,KAAK,OACLmB,GAAG,OACHP,MAAOZ,EACPoB,SAAUJ,KAAKP,eAEnB,uBAAOQ,QAAQ,MAAf,iBACA,uBACIC,KAAK,OACLlB,KAAK,MACLmB,GAAG,MACHP,MAAOX,EACPmB,SAAUJ,KAAKP,eAEnB,uBAAOS,KAAK,SAASN,MAAM,SAASV,QAASc,KAAKF,oB,GApC/CO,aCyDJC,E,4MArDdd,MAAQ,CACPe,WAAY,I,EAwBZpB,gBAAkB,SAACJ,GAAW,IACrBwB,EAAe,EAAKf,MAApBe,WACR,EAAKV,SAAS,CACbU,WAAYA,EAAWC,QAAO,SAACC,EAAWC,GACzC,OAAOA,IAAM3B,Q,EAIhBgB,aAAe,SAACU,GACf,EAAKZ,SAAS,CACbU,WAAW,GAAD,mBAAM,EAAKf,MAAMe,YAAjB,CAA6BE,O,4CAGzC,WAAU,IACFF,EAAcP,KAAKR,MAAnBe,WACN,OACE,sBAAKlB,UAAU,YAAf,UACE,uCACA,cAAC,EAAD,CAAOV,cAAe4B,EAC5BpB,gBAAiBa,KAAKb,kBACtB,cAAC,EAAD,CAAMY,aAAcC,KAAKD,eACzB,8B,GAhDgBM,aCOHM,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.3bd93121.chunk.js","sourcesContent":["import React from 'react';\n\n/*\nclass Table extends Component {\n    render(){\n        return <div>Hellllll</div>\n    }\n}\n*/\n\nconst TableHeader = () => {\n    return (\n        <thead>\n            <tr>\n                <th>Name</th>\n                <th>Job</th>\n            </tr>\n        </thead>\n    );\n}\n\nconst TableBody = (props) => {\n    console.log(props.characterData)\n    const rows = props.characterData.map((row, index) => {\n        console.log(\"Row\");\n        console.log(row)\n        return (\n            <tr key={index}>\n                <td>{row.name}</td>\n                <td>{row.job}</td>\n                <td>\n                    <button onClick={()=>{\n                        props.removeCharacter(index)\n                    }}>Delete</button>\n                </td>\n            </tr>\n        )\n    }\n    );\n    return (\n        <tbody>{rows}</tbody>\n    );\n}\n\n\nconst Table = (props) => {\n    const {characterData, removeCharacter} = props\n    return (\n        <div className=\"container\">\n            <table>\n                <TableHeader />\n                <TableBody characterData={characterData}\n                removeCharacter={removeCharacter}\n\n                />\n            </table>\n        </div>\n    );\n}\nexport default Table","import React, { Component } from 'react';\n\n\nclass Form extends Component {\n    initialState = {\n        name: \"\",\n        job: \"\",\n    }\n    state = this.initialState\n    handleChange = (event) => {\n        const {name, value} = event.target\n        this.setState({\n            [name]: value,\n        })\n    }\n    submitForm = () => {\n        this.props.handleSubmit(this.state)\n        this.setState(this.initialState)\n    }\n    render() {\n        const { name, job } = this.state\n        return (\n            <form>\n                <label htmlFor=\"name\">Name</label>\n                <input \n                    type=\"text\"\n                    name=\"name\"\n                    id=\"name\"\n                    value={name}\n                    onChange={this.handleChange}\n                />\n                <label htmlFor=\"job\">Job</label>\n                <input \n                    type=\"text\"\n                    name=\"job\"\n                    id=\"job\"\n                    value={job}\n                    onChange={this.handleChange}\n                />\n                <input type=\"button\" value=\"submit\" onClick={this.submitForm} />\n            </form>\n        )\n    }\n}\n\nexport default Form;","import React, { Component } from 'react';\nimport Table from './Table';\nimport './App.css';\nimport Form from './Form'\n\nclass App extends Component {\n\n\tstate = {\n\t\tcharacters: [\n\n\t\t],\n\t}\n /* state = {\n    characters: [\n\t\t\t{\n\t\t\t\tname: 'charlie',\n\t\t\t\tjob: 'Janitor',\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: 'Mac',\n\t\t\t\tjob: 'Bouncer',\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: 'Dee',\n\t\t\t\tjob: 'Aspiring actress',\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: 'Dennis',\n\t\t\t\tjob: 'Bartender',\n\t\t\t},\n\t\t],\n  }*/\n  removeCharacter = (index) => {\n\t  const { characters } = this.state\n\t  this.setState({\n\t\t  characters: characters.filter((character, i) => {\n\t\t\t  return i !== index\n\t\t  })\n\t  })\n  }\n  handleSubmit = (character) => {\n\t  this.setState({\n\t\t  characters: [...this.state.characters, character]\n\t  })\n  }\n  render() {\n\t  const {characters} = this.state\n    return (\n      <div className=\"container\">\n        <h1>Hello</h1>\n        <Table characterData={characters}\n\t\tremoveCharacter={this.removeCharacter} />\n\t\t<Form handleSubmit={this.handleSubmit} />\n\t\t<hr />\n      </div>\n\n    )\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}